/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TrainerImport } from './routes/trainer'
import { Route as SignupImport } from './routes/signup'
import { Route as MemberImport } from './routes/member'
import { Route as LoginImport } from './routes/login'
import { Route as AdminImport } from './routes/admin'
import { Route as IndexImport } from './routes/index'
import { Route as TrainerTraineesImport } from './routes/trainer/trainees'
import { Route as TrainerAssignWorkImport } from './routes/trainer/assign-work'
import { Route as MemberPaymentsImport } from './routes/member/payments'
import { Route as MemberDashboardImport } from './routes/member/dashboard'
import { Route as MemberAssignedWorkoutsImport } from './routes/member/assigned-workouts'
import { Route as AdminUsersImport } from './routes/admin/users'
import { Route as AdminTrainersImport } from './routes/admin/trainers'
import { Route as AdminPaymentsImport } from './routes/admin/payments'
import { Route as AdminAttendanceImport } from './routes/admin/attendance'

// Create/Update Routes

const TrainerRoute = TrainerImport.update({
  id: '/trainer',
  path: '/trainer',
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const MemberRoute = MemberImport.update({
  id: '/member',
  path: '/member',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TrainerTraineesRoute = TrainerTraineesImport.update({
  id: '/trainees',
  path: '/trainees',
  getParentRoute: () => TrainerRoute,
} as any)

const TrainerAssignWorkRoute = TrainerAssignWorkImport.update({
  id: '/assign-work',
  path: '/assign-work',
  getParentRoute: () => TrainerRoute,
} as any)

const MemberPaymentsRoute = MemberPaymentsImport.update({
  id: '/payments',
  path: '/payments',
  getParentRoute: () => MemberRoute,
} as any)

const MemberDashboardRoute = MemberDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => MemberRoute,
} as any)

const MemberAssignedWorkoutsRoute = MemberAssignedWorkoutsImport.update({
  id: '/assigned-workouts',
  path: '/assigned-workouts',
  getParentRoute: () => MemberRoute,
} as any)

const AdminUsersRoute = AdminUsersImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AdminRoute,
} as any)

const AdminTrainersRoute = AdminTrainersImport.update({
  id: '/trainers',
  path: '/trainers',
  getParentRoute: () => AdminRoute,
} as any)

const AdminPaymentsRoute = AdminPaymentsImport.update({
  id: '/payments',
  path: '/payments',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAttendanceRoute = AdminAttendanceImport.update({
  id: '/attendance',
  path: '/attendance',
  getParentRoute: () => AdminRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/member': {
      id: '/member'
      path: '/member'
      fullPath: '/member'
      preLoaderRoute: typeof MemberImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/trainer': {
      id: '/trainer'
      path: '/trainer'
      fullPath: '/trainer'
      preLoaderRoute: typeof TrainerImport
      parentRoute: typeof rootRoute
    }
    '/admin/attendance': {
      id: '/admin/attendance'
      path: '/attendance'
      fullPath: '/admin/attendance'
      preLoaderRoute: typeof AdminAttendanceImport
      parentRoute: typeof AdminImport
    }
    '/admin/payments': {
      id: '/admin/payments'
      path: '/payments'
      fullPath: '/admin/payments'
      preLoaderRoute: typeof AdminPaymentsImport
      parentRoute: typeof AdminImport
    }
    '/admin/trainers': {
      id: '/admin/trainers'
      path: '/trainers'
      fullPath: '/admin/trainers'
      preLoaderRoute: typeof AdminTrainersImport
      parentRoute: typeof AdminImport
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersImport
      parentRoute: typeof AdminImport
    }
    '/member/assigned-workouts': {
      id: '/member/assigned-workouts'
      path: '/assigned-workouts'
      fullPath: '/member/assigned-workouts'
      preLoaderRoute: typeof MemberAssignedWorkoutsImport
      parentRoute: typeof MemberImport
    }
    '/member/dashboard': {
      id: '/member/dashboard'
      path: '/dashboard'
      fullPath: '/member/dashboard'
      preLoaderRoute: typeof MemberDashboardImport
      parentRoute: typeof MemberImport
    }
    '/member/payments': {
      id: '/member/payments'
      path: '/payments'
      fullPath: '/member/payments'
      preLoaderRoute: typeof MemberPaymentsImport
      parentRoute: typeof MemberImport
    }
    '/trainer/assign-work': {
      id: '/trainer/assign-work'
      path: '/assign-work'
      fullPath: '/trainer/assign-work'
      preLoaderRoute: typeof TrainerAssignWorkImport
      parentRoute: typeof TrainerImport
    }
    '/trainer/trainees': {
      id: '/trainer/trainees'
      path: '/trainees'
      fullPath: '/trainer/trainees'
      preLoaderRoute: typeof TrainerTraineesImport
      parentRoute: typeof TrainerImport
    }
  }
}

// Create and export the route tree

interface AdminRouteChildren {
  AdminAttendanceRoute: typeof AdminAttendanceRoute
  AdminPaymentsRoute: typeof AdminPaymentsRoute
  AdminTrainersRoute: typeof AdminTrainersRoute
  AdminUsersRoute: typeof AdminUsersRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAttendanceRoute: AdminAttendanceRoute,
  AdminPaymentsRoute: AdminPaymentsRoute,
  AdminTrainersRoute: AdminTrainersRoute,
  AdminUsersRoute: AdminUsersRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface MemberRouteChildren {
  MemberAssignedWorkoutsRoute: typeof MemberAssignedWorkoutsRoute
  MemberDashboardRoute: typeof MemberDashboardRoute
  MemberPaymentsRoute: typeof MemberPaymentsRoute
}

const MemberRouteChildren: MemberRouteChildren = {
  MemberAssignedWorkoutsRoute: MemberAssignedWorkoutsRoute,
  MemberDashboardRoute: MemberDashboardRoute,
  MemberPaymentsRoute: MemberPaymentsRoute,
}

const MemberRouteWithChildren =
  MemberRoute._addFileChildren(MemberRouteChildren)

interface TrainerRouteChildren {
  TrainerAssignWorkRoute: typeof TrainerAssignWorkRoute
  TrainerTraineesRoute: typeof TrainerTraineesRoute
}

const TrainerRouteChildren: TrainerRouteChildren = {
  TrainerAssignWorkRoute: TrainerAssignWorkRoute,
  TrainerTraineesRoute: TrainerTraineesRoute,
}

const TrainerRouteWithChildren =
  TrainerRoute._addFileChildren(TrainerRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/login': typeof LoginRoute
  '/member': typeof MemberRouteWithChildren
  '/signup': typeof SignupRoute
  '/trainer': typeof TrainerRouteWithChildren
  '/admin/attendance': typeof AdminAttendanceRoute
  '/admin/payments': typeof AdminPaymentsRoute
  '/admin/trainers': typeof AdminTrainersRoute
  '/admin/users': typeof AdminUsersRoute
  '/member/assigned-workouts': typeof MemberAssignedWorkoutsRoute
  '/member/dashboard': typeof MemberDashboardRoute
  '/member/payments': typeof MemberPaymentsRoute
  '/trainer/assign-work': typeof TrainerAssignWorkRoute
  '/trainer/trainees': typeof TrainerTraineesRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/login': typeof LoginRoute
  '/member': typeof MemberRouteWithChildren
  '/signup': typeof SignupRoute
  '/trainer': typeof TrainerRouteWithChildren
  '/admin/attendance': typeof AdminAttendanceRoute
  '/admin/payments': typeof AdminPaymentsRoute
  '/admin/trainers': typeof AdminTrainersRoute
  '/admin/users': typeof AdminUsersRoute
  '/member/assigned-workouts': typeof MemberAssignedWorkoutsRoute
  '/member/dashboard': typeof MemberDashboardRoute
  '/member/payments': typeof MemberPaymentsRoute
  '/trainer/assign-work': typeof TrainerAssignWorkRoute
  '/trainer/trainees': typeof TrainerTraineesRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/login': typeof LoginRoute
  '/member': typeof MemberRouteWithChildren
  '/signup': typeof SignupRoute
  '/trainer': typeof TrainerRouteWithChildren
  '/admin/attendance': typeof AdminAttendanceRoute
  '/admin/payments': typeof AdminPaymentsRoute
  '/admin/trainers': typeof AdminTrainersRoute
  '/admin/users': typeof AdminUsersRoute
  '/member/assigned-workouts': typeof MemberAssignedWorkoutsRoute
  '/member/dashboard': typeof MemberDashboardRoute
  '/member/payments': typeof MemberPaymentsRoute
  '/trainer/assign-work': typeof TrainerAssignWorkRoute
  '/trainer/trainees': typeof TrainerTraineesRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/login'
    | '/member'
    | '/signup'
    | '/trainer'
    | '/admin/attendance'
    | '/admin/payments'
    | '/admin/trainers'
    | '/admin/users'
    | '/member/assigned-workouts'
    | '/member/dashboard'
    | '/member/payments'
    | '/trainer/assign-work'
    | '/trainer/trainees'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/login'
    | '/member'
    | '/signup'
    | '/trainer'
    | '/admin/attendance'
    | '/admin/payments'
    | '/admin/trainers'
    | '/admin/users'
    | '/member/assigned-workouts'
    | '/member/dashboard'
    | '/member/payments'
    | '/trainer/assign-work'
    | '/trainer/trainees'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/login'
    | '/member'
    | '/signup'
    | '/trainer'
    | '/admin/attendance'
    | '/admin/payments'
    | '/admin/trainers'
    | '/admin/users'
    | '/member/assigned-workouts'
    | '/member/dashboard'
    | '/member/payments'
    | '/trainer/assign-work'
    | '/trainer/trainees'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  LoginRoute: typeof LoginRoute
  MemberRoute: typeof MemberRouteWithChildren
  SignupRoute: typeof SignupRoute
  TrainerRoute: typeof TrainerRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  LoginRoute: LoginRoute,
  MemberRoute: MemberRouteWithChildren,
  SignupRoute: SignupRoute,
  TrainerRoute: TrainerRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/login",
        "/member",
        "/signup",
        "/trainer"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin.tsx",
      "children": [
        "/admin/attendance",
        "/admin/payments",
        "/admin/trainers",
        "/admin/users"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/member": {
      "filePath": "member.tsx",
      "children": [
        "/member/assigned-workouts",
        "/member/dashboard",
        "/member/payments"
      ]
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/trainer": {
      "filePath": "trainer.tsx",
      "children": [
        "/trainer/assign-work",
        "/trainer/trainees"
      ]
    },
    "/admin/attendance": {
      "filePath": "admin/attendance.tsx",
      "parent": "/admin"
    },
    "/admin/payments": {
      "filePath": "admin/payments.tsx",
      "parent": "/admin"
    },
    "/admin/trainers": {
      "filePath": "admin/trainers.tsx",
      "parent": "/admin"
    },
    "/admin/users": {
      "filePath": "admin/users.tsx",
      "parent": "/admin"
    },
    "/member/assigned-workouts": {
      "filePath": "member/assigned-workouts.tsx",
      "parent": "/member"
    },
    "/member/dashboard": {
      "filePath": "member/dashboard.tsx",
      "parent": "/member"
    },
    "/member/payments": {
      "filePath": "member/payments.tsx",
      "parent": "/member"
    },
    "/trainer/assign-work": {
      "filePath": "trainer/assign-work.tsx",
      "parent": "/trainer"
    },
    "/trainer/trainees": {
      "filePath": "trainer/trainees.tsx",
      "parent": "/trainer"
    }
  }
}
ROUTE_MANIFEST_END */
