/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as AdminImport } from './routes/admin'
import { Route as IndexImport } from './routes/index'
import { Route as AdminUsersImport } from './routes/admin/users'
import { Route as AdminTrainersImport } from './routes/admin/trainers'
import { Route as AdminPaymentsImport } from './routes/admin/payments'
import { Route as AdminAttendanceImport } from './routes/admin/attendance'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdminUsersRoute = AdminUsersImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AdminRoute,
} as any)

const AdminTrainersRoute = AdminTrainersImport.update({
  id: '/trainers',
  path: '/trainers',
  getParentRoute: () => AdminRoute,
} as any)

const AdminPaymentsRoute = AdminPaymentsImport.update({
  id: '/payments',
  path: '/payments',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAttendanceRoute = AdminAttendanceImport.update({
  id: '/attendance',
  path: '/attendance',
  getParentRoute: () => AdminRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/admin/attendance': {
      id: '/admin/attendance'
      path: '/attendance'
      fullPath: '/admin/attendance'
      preLoaderRoute: typeof AdminAttendanceImport
      parentRoute: typeof AdminImport
    }
    '/admin/payments': {
      id: '/admin/payments'
      path: '/payments'
      fullPath: '/admin/payments'
      preLoaderRoute: typeof AdminPaymentsImport
      parentRoute: typeof AdminImport
    }
    '/admin/trainers': {
      id: '/admin/trainers'
      path: '/trainers'
      fullPath: '/admin/trainers'
      preLoaderRoute: typeof AdminTrainersImport
      parentRoute: typeof AdminImport
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersImport
      parentRoute: typeof AdminImport
    }
  }
}

// Create and export the route tree

interface AdminRouteChildren {
  AdminAttendanceRoute: typeof AdminAttendanceRoute
  AdminPaymentsRoute: typeof AdminPaymentsRoute
  AdminTrainersRoute: typeof AdminTrainersRoute
  AdminUsersRoute: typeof AdminUsersRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAttendanceRoute: AdminAttendanceRoute,
  AdminPaymentsRoute: AdminPaymentsRoute,
  AdminTrainersRoute: AdminTrainersRoute,
  AdminUsersRoute: AdminUsersRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/admin/attendance': typeof AdminAttendanceRoute
  '/admin/payments': typeof AdminPaymentsRoute
  '/admin/trainers': typeof AdminTrainersRoute
  '/admin/users': typeof AdminUsersRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/admin/attendance': typeof AdminAttendanceRoute
  '/admin/payments': typeof AdminPaymentsRoute
  '/admin/trainers': typeof AdminTrainersRoute
  '/admin/users': typeof AdminUsersRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/admin/attendance': typeof AdminAttendanceRoute
  '/admin/payments': typeof AdminPaymentsRoute
  '/admin/trainers': typeof AdminTrainersRoute
  '/admin/users': typeof AdminUsersRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/login'
    | '/signup'
    | '/admin/attendance'
    | '/admin/payments'
    | '/admin/trainers'
    | '/admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/login'
    | '/signup'
    | '/admin/attendance'
    | '/admin/payments'
    | '/admin/trainers'
    | '/admin/users'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/login'
    | '/signup'
    | '/admin/attendance'
    | '/admin/payments'
    | '/admin/trainers'
    | '/admin/users'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/login",
        "/signup"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin.tsx",
      "children": [
        "/admin/attendance",
        "/admin/payments",
        "/admin/trainers",
        "/admin/users"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/admin/attendance": {
      "filePath": "admin/attendance.tsx",
      "parent": "/admin"
    },
    "/admin/payments": {
      "filePath": "admin/payments.tsx",
      "parent": "/admin"
    },
    "/admin/trainers": {
      "filePath": "admin/trainers.tsx",
      "parent": "/admin"
    },
    "/admin/users": {
      "filePath": "admin/users.tsx",
      "parent": "/admin"
    }
  }
}
ROUTE_MANIFEST_END */
